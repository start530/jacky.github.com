<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: CCDisplayLinkDirecto | Jacky's Blog]]></title>
  <link href="http://www.fusijie.com/tags/ccdisplaylinkdirecto/atom.xml" rel="self"/>
  <link href="http://www.fusijie.com/"/>
  <updated>2014-05-06T22:14:46+08:00</updated>
  <id>http://www.fusijie.com/</id>
  <author>
    <name><![CDATA[FuSijie]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[【玩转cocos2d-x之五】导演类CCDirector]]></title>
    <link href="http://www.fusijie.com/blog/2013/10/12/play-cocos2dx-05/"/>
    <updated>2013-10-12T21:49:00+08:00</updated>
    <id>http://www.fusijie.com/blog/2013/10/12/play-cocos2dx-05</id>
    <content type="html"><![CDATA[<p>既然cocos2d-x都帮我们封装好了，使得开发与平台无关，那接下来我们就单纯地开始好好玩游戏吧！这几篇是对cocos2d-x一些基本且重要的元素进行解释和API介绍，之前没有系统的看过API，有时候某些功能引擎都已经提供好了，不知道还是会自己去写。所以全面地了解一下是必须的。</p>

<!-- more -->


<h3>1.概况</h3>

<div align="center"><img src="http://img.blog.csdn.net/20131012091844921?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvamFja3lzdHVkaW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="" border="0" title="CCDirector" /><br></br></div>


<p>导演类CCDirector是cocos2d-x引擎中非常重要的一个类，它是一个抽象类（mainloop空实现），主要完成以下工作：</p>

<p>（1）初始化游戏和销毁游戏</p>

<p>（2）管理调度场景</p>

<p>（3）调整设置openGL信息</p>

<p>（4）获取、设置游戏的相关细节</p>

<p>CCDirector是单例类，直接从CCObject继承而来，它在cocos2d-x中的首次创建位置在上一篇已经介绍了。因此后面的CCDirector调用可采用如下方式：</p>

<pre><code>CCDirector::sharedDirector()-&gt;methodname;
</code></pre>

<h3>2.常用接口</h3>

<p><strong>2.1.属性</strong></p>

<pre><code>//获得当前运行场景，cocos2dx同时只能运行一个场景  
CCScene* getRunningScene(void);  

//获取fps  
double getAnimationInterval(void);  
//设置fps  
virtual void setAnimationInterval(double dValue);  

//是否显示fps  
bool isDisplayStats(void);  
//设置是否显示fps  
void setDisplayStats(bool bDisplayStats);  

//每帧秒数  
float getSecondsPerFrame();  

//获取openGLView  
CCEGLView* getOpenGLView(void);  
//设置openGLView  
void setOpenGLView(CCEGLView *pobOpenGLView);  

//释放暂停  
bool isPaused(void);  

//获取调用到现在的所有帧数  
unsigned int getTotalFrames(void);  

//是否接收到cleanup事件，replace会，而push不会  
bool isSendCleanupToScene(void);  
</code></pre>

<p><strong>2.2.窗口</strong></p>

<pre><code>//返回openGLView的大小，单位为点  
CCSize getWinSize(void);  

//返回openGLView的大小，单位为像素  
CCSize getWinSizeInPixels(void);  

//返回可见区域的大小，单位为点，如果没调用setDesignResolutionSize，就和getWinSize是一样的  
CCSize getVisibleSize();  

//返回可见区域的原点  
CCPoint getVisibleOrigin();  

//将UIKit坐标体系转换成OpenGL坐标体系  
CCPoint convertToGL(const CCPoint&amp; obPoint);  

//将OpenGL坐标体系转换成UIKit坐标体系
CCPoint convertToUI(const CCPoint&amp; obPoint);  
</code></pre>

<p><strong>2.3.场景管理</strong></p>

<pre><code>//调用第一个场景，当前不能有场景运行  
void runWithScene(CCScene *pScene);  

//场景入栈，当前必须有场景  
void pushScene(CCScene *pScene);  

//场景出栈，删除当前场景，当前必须有场景  
void popScene(void);  

//弹出所有场景，直至根场景  
void popToRootScene(void);  

//弹出至指定场景  
void popToSceneStackLevel(int level);  

//用新场景替代旧场景  
void replaceScene(CCScene *pScene);  

//结束运行，释放场景，必须手动调用  
void end(void);  

//暂停场景  
void pause(void);  

//恢复场景  
void resume(void);  

//暂停所有动画  
virtual void stopAnimation(void);  

//开始所有动画  
virtual void startAnimation(void);  
</code></pre>

<p><strong>2.4.内存和OpenGL</strong></p>

<pre><code>//移除所有cocos2dx缓冲数据  
void purgeCachedData(void);  

//设置默认值  
void setDefaultValues(void);  

//设置OpenGL默认值  
void setGLDefaultValues(void);  

//开关OpenGL alpha混合通道  
void setAlphaBlending(bool bOn);  

//设置景深测试  
void setDepthTest(bool bOn);  
</code></pre>

<h3>3.CCDisplayLinkDirector</h3>

<p>CCDisplayLinkDirector继承于CCDirector，它实现了mainloop函数，是一个以显示刷新速度同步定时器的Director，也就是可以自动刷新的导演类，它支持60，30，15三种帧数。我们平时使用的也就是它。</p>
]]></content>
  </entry>
  
</feed>
